/**
 * Mixin for outputting border radius with vendor prefixes.
 *
 * @param {int} $radius The border radius
 *
 * @deprecated This is no longer necessary [https://css-tricks.com/do-we-need-box-shadow-prefixes/]
 * 
 */
/**
 * Mixin for outputting box shadows with vendor prefixes.
 *
 * @param {string} $width The width to apply to the box shadow
 *
 * @deprecated This is no longer necessary [https://css-tricks.com/do-we-need-box-shadow-prefixes/]
 * 
 */
/**
 * Advanced mixin for outputting box shadows with vendor prefixes.
 *
 * @param {string} $top             The top box shadow amount
 * @param {string} $left            The left box shadow amount
 * @param {int} $blur               The amount to blur
 * @param {string} $color           The color to use
 * @param {boolean} $inset: false   Whether or not to inset
 *
 * @deprecated This is no longer necessary [https://css-tricks.com/do-we-need-box-shadow-prefixes/]
 *
 */
/**
 * Mixin for outputting transition properties with vendor prefixes.
 *
 * @param {string} $transitionProperties... Different transition properties, separated by commas
 *
 */
/**
 * Mixin for making an element unselectable by the user.
 *
 */
/**
 * Mixin for outputting rotation properties with vendor prefixes.
 *
 * @param {int} $degrees The degrees to rotate the element
 *
 */
/**
 * Mixin for outputting scale properties with vendor prefixes.
 *
 * @param {int} $scale_amount The amount to scale
 *
 */
/**
 * Mixin for outputting placeholder text used with inputs.
 *
 */
/**
 * Mixin for outputting an element opacity (good for old versions of IE).
 *
 * @param {float} $opacity The opacity
 *
 */
/**
 * Mixin to output a Font Awesome icon. This must be placed inside of a pseudo-element
 *
 * @param {string} $icon_code  The icon code (with the preceding escape character)
 * @param {array} $overrides: ()            Any overrides for the default attributes with Font Awesome
 */
/**
 * Mixin used to generate an animation. The content will be repeated for all of the vendor prefixes.
 *
 * @param {string} $animation_name The name of the animation
 *
 * @see animation
 *
 */
/**
 * Mixin used to output the CSS to invoke an animation.
 *
 * @param {string} $animation_name                  The animation name to use
 * @param {string] $speed: 2s                       The speed of the animation
 * @param {string} $timing_function: infinite        The timing function (if it repeats, etc)
 * @param {string} $delay : 0s                      Any delay applied to the animation
 *
 */
/**
 * Mixin used to vertical-align an element
 *
 */
/**
 * Mixin used to assign text color and check if the selected text color has a defined highlight color in the color map
 *
 */
/**
 * Mixin used to assign special styles to high-resolution screens
 *
 */
/**
 * Mixin used to apply styles to specific viewports.
 *
 * @param {string} $min  The min width for the query
 * @param {string} $max: false        An optional max-width for the query
 *
 */
/**
 * Mixin used to apply styles to the XXS viewport.
 *
 * @param {boolean} $limit Whether to only apply the style to the specified viewport and apply a max-width argument
 *
 */
/**
 * Mixin used to apply styles to the XS viewport.
 *
 * @param {boolean} $limit Whether to only apply the style to the specified viewport and apply a max-width argument
 *
 */
/**
 * Mixin used to apply styles to the small viewport.
 *
 * @param {boolean} $limit Whether to only apply the style to the specified viewport and apply a max-width argument
 *
 */
/**
 * Mixin used to apply styles to the medium viewport.
 *
 * @param {boolean} $limit Whether to only apply the style to the specified viewport and apply a max-width argument
 *
 */
/**
 * Mixin used to apply styles to the large viewport.
 *
 */
/**
* Mixin to make it easy to declare a REM-based font size and get the pre-calculated font-size (for older browsers like IE)
*
* @param {int || float} $text_size_in_rem The font size in REM
*
*/
/**
 * Mixin to generate a transition
 *
 * @param     {string}    $transitionProperties...    The properties to animate
 *
 * @return    {void}
 */
/**
 * Spin for WebKit
 */
@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }
/**
 * Spin for Firefox
 */
@-moz-keyframes spin {
  0% {
    -moz-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -moz-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -moz-transform: rotate(360deg);
    transform: rotate(360deg); } }
/**
 * Spin for Opera (who's still using this?)
 */
@-o-keyframes spin {
  0% {
    -o-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -o-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -o-transform: rotate(360deg);
    transform: rotate(360deg); } }
/**
 * Spin for generic stuff
 */
@keyframes spin {
  0% {
    transform: rotate(0deg); }
  50% {
    transform: rotate(180deg); }
  100% {
    transform: rotate(360deg); } }
.logo-spin {
  -webkit-animation-name: spin;
  -moz-animation-name: spin;
  animation-name: spin;
  -webkit-animation-duration: 1s;
  -moz-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  animation-timing-function: linear;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-transform-origin: 50% 47.5%;
  -moz-transform-origin: 50% 47.5%;
  -ms-transform-origin: 50% 47.5%;
  -o-transform-origin: 50% 47.5%;
  transform-origin: 50% 47.5%; }

.notice {
  opacity: 1;
  -webkit-transition: opacity 500ms;
  -moz-transition: opacity 500ms;
  -ms-transition: opacity 500ms;
  -o-transition: opacity 500ms;
  transition: opacity 500ms; }
  .notice.notice-invisible {
    opacity: 0; }
  .notice.notice-hidden {
    display: none; }

.force-refresh-admin-container {
  display: flex;
  width: 100%;
  margin-top: 10px; }
  .force-refresh-admin-container .force-refresh-admin-main {
    width: 66.6666666667%;
    margin: 0 auto;
    padding: 10px;
    text-align: center;
    border: 2px solid #d8d8d8;
    border-radius: 10px;
    background-color: white;
    -webkit-backface-visibility: hidden; }
    .force-refresh-admin-container .force-refresh-admin-main .logo {
      font-size: 40px;
      width: 40px;
      height: 40px; }
    .force-refresh-admin-container .force-refresh-admin-main .button {
      font-size: 20px;
      display: inline;
      cursor: pointer; }
    .force-refresh-admin-container .force-refresh-admin-main .force-refresh-admin-main-inner {
      padding: 20px 0 30px; }
  .force-refresh-admin-container .force-refresh-admin-options {
    width: 33.3333333333%;
    margin: 0 auto; }
    .force-refresh-admin-container .force-refresh-admin-options .force-refresh-admin-options-inner {
      margin: 0 20px;
      padding: 0 20px 10px;
      border: 2px solid white;
      border-radius: 10px;
      background-color: white; }
      .force-refresh-admin-container .force-refresh-admin-options .force-refresh-admin-options-inner .option-group {
        margin-top: 10px; }
      .force-refresh-admin-container .force-refresh-admin-options .force-refresh-admin-options-inner select {
        font-size: 14px;
        height: 22px; }
      .force-refresh-admin-container .force-refresh-admin-options .force-refresh-admin-options-inner .force-refresh-options-header {
        text-align: center; }
    .force-refresh-admin-container .force-refresh-admin-options .force-refresh-admin-options-footer {
      margin-top: 20px;
      text-align: right; }
      .force-refresh-admin-container .force-refresh-admin-options .force-refresh-admin-options-footer button {
        margin-top: 10px; }

#force-refresh-meta-box-refresh-type-selector {
  width: 100%;
  margin: 10px 0 0; }

#force-refresh-meta-box-refresh-type-descriptions li {
  font-size: 0.7rem;
  line-height: 1.4;
  display: none;
  color: #a2a2a2; }
  #force-refresh-meta-box-refresh-type-descriptions li.selected {
    display: block; }

#force-refresh-meta-box-refresh-type-options-container .force-refresh-meta-box-refresh-type-options {
  display: none; }
  #force-refresh-meta-box-refresh-type-options-container .force-refresh-meta-box-refresh-type-options.selected {
    display: block; }

#wp-admin-bar-force-refresh {
  cursor: pointer; }
  #wp-admin-bar-force-refresh .fa {
    font-family: FontAwesome !important; }
  #wp-admin-bar-force-refresh span {
    margin-left: 5px; }
